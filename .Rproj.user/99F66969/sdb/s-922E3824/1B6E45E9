{
    "collab_server" : "",
    "contents" : "##?q?W?????ѵ??}?l\nif (!require('SportsAnalytics')){\n  install.packages(\"SportsAnalytics\")\n  library(SportsAnalytics)\n}\nNBA1415<-fetch_NBAPlayerStatistics(\"14-15\")\nfor(i in 1:nrow(NBA1415)){\n  if(NBA1415[i,\"GamesPlayed\"]>70&NBA1415[i,\"TotalPoints\"]>1500){\n    print(NBA1415[i,c(\"Name\",\"Team\",\"Position\")])\n  }\n}\n\n## ?????Ffor???n??\nsubset(NBA1415,GamesPlayed>70&TotalPoints>1500)[,c(\"Name\",\"Team\",\"Position\")]\n## ?????Ffor???n??-2\nNBA1415[NBA1415$GamesPlayed>70&NBA1415$TotalPoints>1500,c(\"Name\",\"Team\",\"Position\")]\n\n## ?i?O....?٬O???Q?Ϊ??ɭ԰?....\nSan<-subset(NBA1415,Team=='SAN')\norder(San$TotalPoints,decreasing = T)\nSan[order(San$TotalPoints,decreasing = T)[1],\n    c(\"Name\",\"Team\",\"TotalPoints\")]\n\n##?Q?n?C?@?????̰???\n##?ڭ??٬O??for+unique()?ոլݦn?F\nunique(NBA1415$Team) #unique?i?H???????ƪ????W\nfor(team in unique(NBA1415$Team)){\n  selectTeam<-subset(NBA1415,Team==team) #???C?@?????y??(?????n?????䤤?@??)\n  print(selectTeam[order(selectTeam$TotalPoints,decreasing = T)[1],\n                   c(\"Name\",\"Team\",\"TotalPoints\")]) #?C???@???N?L?o?��Ĥ@???y??\n}\n\n##??rbind()?????X???z???@??Data Frame\nFinalOutput<-NULL\nfor(team in unique(NBA1415$Team)){\n  selectTeam<-subset(NBA1415,Team==team)\n  FinalOutput<-rbind(FinalOutput,\n                     selectTeam[\n                       order(selectTeam$TotalPoints,decreasing = T)[1],\n                       c(\"Name\",\"Team\",\"TotalPoints\")]) #?]???@???A?U?@???|?A???i?h\n}\nFinalOutput\n\n\n\n##apply()\napply(NBA1415,2,max)\n##apply()?d??2\n## NBA1415?y?u,?X???ơB?X???`???��ơB?`?��??????ȦU?O?h??\napply(NBA1415[,c(\"GamesPlayed\",\"TotalMinutesPlayed\",\"TotalPoints\")],2,mean)\n\n\n##sapply()\nsapply(iris, mean)\n##sapply()?d??2\nsapply(NBA1415[,c(\"GamesPlayed\",\"TotalMinutesPlayed\",\"TotalPoints\")],mean)\n\n\n##lapply(): List\nlapply(iris, mean)\n\n##lapply()?d??2\nlapply(NBA1415[,c(\"GamesPlayed\",\"TotalMinutesPlayed\",\"TotalPoints\")],mean)\n\n\n##tapply()\ntapply(NBA1415$Name,NBA1415$Team,length) ##?H?????@?̾ڨӤ????C?@???̦??X?Ӳy??\ntapply(NBA1415$TotalPoints,NBA1415$Team,max) #?C?@???o?��̦h???O?X??\ntapply(NBA1415$TotalPoints,NBA1415$Team,mean) #?C?@?????????`?o?��?\ntapply(NBA1415$TotalPoints,NBA1415$Team,range) #?C?@?????`?o??range\n\n##split()\nsplit(1:30,gl(3, 10))\n\n##split()+lapply()\nlapply(split(1:30,gl(3, 10)),mean)\ntapply(1:30,gl(3, 10),mean)\n\n\n##Data Frame?]?i?Hsplit()\nNBA1415Team<-split(NBA1415[,c(\"TotalPoints\",\"GamesPlayed\")],NBA1415$Team)\n##split()?f?tapply()?a?ڨϥ?\n##?]???r???e???r????\nlapply(NBA1415Team, colMeans)\nsapply(NBA1415Team, colMeans)\n\n##split()?G?Φh???????Ӥ��s\nNBA1415TP<-split(NBA1415[,c(\"TotalPoints\",\"GamesPlayed\")],list(NBA1415$Team,NBA1415$Position))\nlapply(NBA1415TP, colMeans)\nsapply(NBA1415TP, colMeans)\n\n##????apply?a?ڪ????ơGaggregate()\naggregate(NBA1415$TotalPoints, by=list(NBA1415$Team,NBA1415$Position), FUN=mean, na.rm=TRUE)\n##????apply?a?ڪ????ơGaggregate()-2\naggregate(TotalPoints ~ Team+Position, data = NBA1415, mean) #?n????~?~?వ?B??\n#?p?G?u?n?ⶤ????N??position?R??\n\n#Missing Value\nx<-c(1,2,3,4,5,NA)\nmean(x)\nmean(x, na.rm=T)\nsum(x)\nsum(x, na.rm=T)\n\n##Removing NA\nx <- c(1, 2, NA, 4, NA, 5)\nx[! is.na(x)] #?u????is.na(x)?|?X?{?ONA?N?OTRUE\nx[! complete.cases(x)] #?u???XNA\n\n\n##?w?q?@?ӷs??????\nround2<-function(v){\n  round(v,digits = 2)\n}\nround2(3.886)\n##Lazy Evaluation\nround2Lazy<-function(vector,nothing){\n  round(vector,digits = 2)\n}\nround2(3.886)\n##Lazy Evaluation 2\nf <- function(a, b) {\n  print(a)\n  print(b)\n}\nf(45)\n##?K?Ѽ?\nroundmean<-function(vector, ...){\n  round(mean(vector,...),digits=2)\n}\nroundmean(c(1.1,2,3,4,5))\nroundmean(c(1.1,2,3,4,5,NA))\nroundmean(c(1.1,2,3,4,5,NA),na.rm=T)\n\n##?Ѽƹw?]??\nroundDe<-function(v=1.111:10.111){\n  round(v,digits = 2)\n}\nroundDe(1.66:6.66)\nroundDe()\n##retrun()\nround2<-function(v){\n  if(!is.numeric(v)){\n    print(\"???J?Ʀr\")\n    return()\n  }\n  round(v,digits = 2)\n}\nround2(\"a\")\n\n\n##???Ƥ]?i?H???@?Ѽƨӥ?\napply(iris,2,max)\n\nRoundNumber2<-function(v,XFun){\n  round(XFun(v),digits = 2)\n}\nRoundNumber2(1.1:10.1,mean)\n\n##?q?????W?U???ɮ? download.file\nif (!require('RCurl')){\n  install.packages(\"RCurl\")\n  library(RCurl)\n}\ndownload.file(\"https://raw.githubusercontent.com/yijutseng/\n              BigDataCGUIM/master/files/opendata10401.csv\", \n              destfile = \"open.csv\", method = \"curl\")\n\n## read.csv?ϥνd??\ndata <- read.csv('open.csv')\ndata\n\n#得分王\nMaxPoint<-aggregate(TotalPoints~Team,NBA1415,max)\ntapply(NBA1415$TotalPoints,NBA1415$Team,max)\nNBA1415MaxPoint<-merge(NBA1415,MaxPoint)\noutput<-NBA1415MaxPoint[order(NBA1415MaxPoint$TotalPoints,decreasing = T),c(\"Team\",\"Name\",\"TotalPoints\")]\nlibrary(knitr)\nkable(output, digits=2)\n\n#讀資料\ninstall.packages(\"SportsAnalytics\")\nlibrary(SportsAnalytics)\nNBA1415<-fetch_NBAPlayerStatistics(\"14-15\")\n\n#最辛苦的球員TotalMinutesPlayed \n\nMaxTime<-aggregate(TotalMinutesPlayed~Team,NBA1415,max)\ntapply(NBA1415$TotalMinutesPlayed,NBA1415$Team,max)\nNBA1415MaxTime<-merge(NBA1415,MaxTime)\noutput<-NBA1415MaxTime[order(NBA1415MaxTime$TotalMinutesPlayed,decreasing = T),c(\"Team\",\"Name\",\"TotalMinutesPlayed\")]\nlibrary(knitr)\nkable(output, digits=2)\n\n#三分最準的球員\n\nNBA1415$ThreesP<-\n  round(NBA1415$ThreesMade/NBA1415$ThreesAttempted,digits=3)\nNBA1415ThreesPMax<-merge(NBA1415,aggregate(ThreesP~Team,NBA1415,max))\noutput<-NBA1415ThreesPMax[order(ThreesPMax$ThreesP,decreasing=T),\n           c(\"Team\",\"Name\",\"Position\",\"ThreesP\",\"ThreesMade\")]\nlibrary(knitr)\nkable(output, digits=2)\n#最有效率\n\nNBA1415$Effective<-\n  round(NBA1415$TotalPoints/NBA1415$TotalMinutesPlayed,digits=3)\nNBA1415EffectiveMax<-merge(NBA1415,aggregate(Effective~Team,NBA1415,max))\noutput<-NBA1415EffectiveMax[order(EffectiveMax$Effective,decreasing=T),\n           c(\"Team\",\"Name\",\"Effective\")]\nlibrary(knitr)\nkable(output, digits=2)",
    "created" : 1459097346076.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "380144563",
    "id" : "1B6E45E9",
    "lastKnownWriteTime" : 1459101084,
    "last_content_update" : 1459101084414,
    "path" : "D:/BigData/BigDataCGUIM/class20160321.R",
    "project_path" : "class20160321.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}